name: CI

on:
  push:
    branches: [main, develop, 'feat/**']
  pull_request:
    branches: [main, develop]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build
        env:
          # Provide minimal env vars for build (won't fail in CI)
          NEXT_PUBLIC_SOLANA_NETWORK: devnet

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: .next
          retention-days: 1

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm run test

      - name: Generate coverage report
        run: npm run test -- --coverage --reporter=json --reporter=text

      - name: Upload coverage to Codecov (optional)
        uses: codecov/codecov-action@v4
        continue-on-error: true
        with:
          files: ./coverage/coverage-final.json
          flags: unittests
          name: codecov-umbrella

  smoke:
    name: Smoke Test
    runs-on: ubuntu-latest
    needs: [build, test]
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run smoke tests
        run: npm run smoke
        continue-on-error: true
        env:
          NEXT_PUBLIC_SOLANA_NETWORK: devnet
          # SMOKE_TEST_VAULT_PDA: (optional - set as repo secret if you have a known vault)

      - name: Smoke test status
        if: failure()
        run: echo "⚠️ Smoke test failed (non-blocking)"

  summary:
    name: CI Summary
    runs-on: ubuntu-latest
    needs: [lint, build, test, smoke]
    if: always()
    steps:
      - name: Check results
        run: |
          echo "Lint: ${{ needs.lint.result }}"
          echo "Build: ${{ needs.build.result }}"
          echo "Test: ${{ needs.test.result }}"
          echo "Smoke: ${{ needs.smoke.result }}"

      - name: Fail if critical jobs failed
        if: needs.lint.result != 'success' || needs.build.result != 'success' || needs.test.result != 'success'
        run: exit 1
